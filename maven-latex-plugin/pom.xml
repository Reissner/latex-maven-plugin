<?xml version="1.0" encoding="utf-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
			     http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- coordinates for model and artifact xxx -->
  <modelVersion>4.0.0</modelVersion>
  

  <!-- The Basics -->
  <groupId>eu.simuline.m2latex</groupId>
  <artifactId>latex-maven-plugin</artifactId>
  <version>1.5-SNAPSHOT</version>
  <packaging>maven-plugin</packaging>

    <!--parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent-->



  <!-- information for generating a site -->
  <name>Maven LaTeX Plugin</name>
  <description>
    Automatically create pdf, doc, odt, txt or html documents 
    from LaTeX sources during the Maven site phase
    allowing typical graphic formats native to tex or to the package graphics.
    Also includes bibliography, index and glossary
    and also check for rerun, warnings and under/overfull boxes. 
  </description>

  <url>https://github.com/Reissner/maven-latex-plugin/</url>
  <inceptionYear>2016</inceptionYear>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>


  <organization>
    <name>Simuline Organization (l2r)</name>
    <url>http://www.simuline.eu</url>
  </organization>

 
  <!--organization>
    <name>akquinet AG</name>
    <url>http://www.akquinet.de</url>
  </organization-->

  <developers>
    <developer>
      <id>cerker</id>
      <name>Carsten Erker</name>
      <email>carsten.erker at akquinet dot de</email>
      <organization>akquinet tech@spree GmbH</organization>
      <organizationUrl>http://www.akquinet.de</organizationUrl>
    </developer>

    <developer>
      <id>hwilming</id>
      <name>Heinz Wilming</name>
      <email>heinz.wilming at akquinet dot de</email>
      <organization>akquinet tech@spree GmbH</organization>
      <organizationUrl>http://www.akquinet.de</organizationUrl>
    </developer>

    <developer>
      <id>ereissner</id>
      <name>Ernst Reissner</name>
      <email>ernst.reissner at simuline dot eu</email>
      <organization>l2r</organization>
      <organizationUrl>https://www.simuline.eu</organizationUrl>
      <timezone>Europe/Berlin</timezone>
      <properties>
        <picUrl>http://www.simuline.eu/Gluck_0001.gif</picUrl>
      </properties>
    </developer>
  </developers>

  <!-- mailingLists></mailingLists-->

  <!-- source repositories: at the moment not needed. -->
  <repositories>
    <repository>
      <id>publicRepoAtSimuline</id>
      <url>https://www.simuline.eu/RepositoryMaven</url>
    </repository>
  </repositories>


  <!--scm>
    <connection>
    scm:git:git://github.com/akquinet/maven-latex-plugin.git
    </connection>
    <url>https://github.com/akquinet/maven-latex-plugin</url>
    <developerConnection>
    scm:git:git@github.com:akquinet/maven-latex-plugin.git
    </developerConnection>
    <tag>1.3</tag>
  </scm-->

  <scm>
    <connection>
      scm:git:https://github.com/Reissner/maven-latex-plugin.git
    </connection>
    <developerConnection>
      scm:git:https://github.com/Reissner/maven-latex-plugin.git
    </developerConnection>
    <url>https://github.com/Reissner/maven-latex-plugin</url>
    <tag>latex-maven-plugin-1.3</tag>
  </scm>

  <distributionManagement><!-- For authentication see ~/.m2/settings.xml -->
    <site>
      <id>publicSiteAtSimuline</id>
      <url>ftp://www.simuline.eu/public_html/LatexMavenPlugin</url>
    </site>

    <repository>
      <id>publicRepoAtSimuline</id>
      <url>ftp://www.simuline.eu/public_html/RepositoryMaven</url>
    </repository>
  </distributionManagement>


  <mailingLists>
    <!--mailingList>
      <name>maven-latex-plugin Users</name>
      <archive>http://groups.google.com/group/maven-latex-plugin-users</archive>
      <post>maven-latex-plugin-users@googlegroups.com</post>
      <subscribe>maven-latex-plugin-users+subscribe@googlegroups.com</subscribe>
      <unsubscribe>maven-latex-plugin-users+unsubscribe@googlegroups.com</unsubscribe>
    </mailingList-->
  </mailingLists>

  <!--issueManagement>
    <system>Github Issues</system>
    <url>https://github.com/akquinet/maven-latex-plugin/issues</url>
    </issueManagement-->

  <properties>
    <!-- checked during validation -->
    <versionMvn>3.6.3</versionMvn>
    <!-- Using platform encoding to copy filtered resources; 
    without project.build.sourceEncoding the build is platform dependent! -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${versionMvn}</version>
    </dependency>

    <!-- for a trial in MetaInfo class -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <version>${versionMvn}</version>
    </dependency>

    
    <!-- dependencies to annotations -->
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>3.6.0</version>
      <scope>provided</scope>
    </dependency>

    <!-- version maybe outdated -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-ant-tasks</artifactId>
      <version>2.1.3</version>
    </dependency>

    <!--dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.5</version>
        </dependency-->
    <!--dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.4</version>
        </dependency-->
    <!-- https://mvnrepository.com/artifact/org.codehaus.plexus/plexus-utils -->
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>3.2.0</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.3.0</version>
      <!--version>2.25.1</version does not work with plugin-plugin -->
    </dependency>

    <!--dependency>
      <groupId>eu.simuline.m2latex</groupId>
      <artifactId>latex-maven-plugin</artifactId>
      <version>1.4</version>
    </dependency-->

  </dependencies>

  <build>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
         <artifactId>wagon-ftp</artifactId>
         <version>3.3.2</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
         <artifactId>wagon-file</artifactId>
         <version>3.3.2</version>
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
         <artifactId>wagon-http</artifactId>
         <version>3.3.2</version>
      </extension>
    </extensions>

    <resources>
      <resource>
	<directory>src/main/resources</directory>
	<filtering>true</filtering>
      </resource>
    </resources>


    <plugins>
      <!-- at the moment just to enforce maven version
	   use as mvn validate not as mvn enforcer:enforce
	   TBD: add a lot of tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
	    <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${versionMvn}</version>
		  <message>
		    Invalid Maven version. It should, at least, be ${versionMvn}
		  </message>
                </requireMavenVersion>
		<requireJavaVersion>
		  <version>11</version>
		</requireJavaVersion>
		<!--dependencyConvergence/--><!-- this fails because of plugin-api -->
              </rules>    
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- information about a project or the system -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-help-plugin</artifactId>
        <version>3.2.0</version>
      </plugin>

      <!-- read/write property values -->
      <!-- in this case, this plugin also exposes profile properties from settings.xml
      related with gpg: gpg.executable and gpg.passwprase. 
      This makes it unuseable. 
      What would be needed is make it configurable to include/exclude properites. 
      On the other hand, development shows low level of activity, 
      feature requests are not worked on, 
      but pull requests are done. 
      So if i want to do it myself, i can. Well... 
      For the moment, I decided to drop this and go with resources plugin.  -->
      <!--  
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>write-project-properties</goal>
            </goals>
            <configuration>
              <outputFile>
                ${project.build.outputDirectory}/mvn.properties
              </outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
-->

	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-resources-plugin</artifactId>
		<version>3.2.0</version>
		<configuration>
			<propertiesEncoding>UTF-8</propertiesEncoding>
		</configuration>
	</plugin>

	  <plugin>
		<groupId>pl.project13.maven</groupId>
		<artifactId>git-commit-id-plugin</artifactId>
		<version>4.0.0</version>
		<executions>
			<execution>
				<id>get-the-git-infos</id>
				<goals>
					<goal>revision</goal>
				</goals>
				<phase>initialize</phase>
			</execution>
		</executions>
		<configuration>
			<generateGitPropertiesFile>true</generateGitPropertiesFile>
			<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
			</generateGitPropertiesFilename>
			<!--  includeOnlyProperties>
				<includeOnlyProperty>^git.build.(time|version)$
				</includeOnlyProperty>
				<includeOnlyProperty>^git.commit.id.(abbrev|full)$
				</includeOnlyProperty>
			</includeOnlyProperties-->
			<commitIdGenerationMode>full</commitIdGenerationMode>
		</configuration>
	  </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
      </plugin>

      <!--plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>2.12.1</version>
        <executions>
          <execution>
            <id>check-changes</id>
            <phase>verify</phase>
            <goals>
              <goal>changes-check</goal>
            </goals>
          </execution>
        </executions>
      </plugin-->


      <!-- configuration for clean plugin -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
      </plugin>

            <!-- This plugin will write properties values 
	   using dependency information into classpath.txt-->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-dependency-plugin</artifactId>
	<version>3.0.2</version>
	<executions>
	  <execution>
	    <goals>
	      <goal>build-classpath</goal>
	    </goals>
	  </execution>
	</executions>
	<configuration>
	  <outputFile>${project.build.directory}/classpath.txt</outputFile>
	</configuration>
      </plugin>


      <!-- creates HelpMojo 
	   Still there is a problem with detail=true. 
	   Does not work with 3.4 or later versions! 
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <!--version>3.4</version-->
	<!-- this is the first version with a NullPointerException -->
        <!--version>3.6.0</version-->
	<!-- this is the current version at the time of this writing -->
        <version>3.3</version>
	<!-- this version allows installation, but fails with javadoc -->
	<configuration>
	  <skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
	</configuration>

        <executions>
	  <execution>
	    <id>default-descriptor</id>
	    <goals>
	      <goal>descriptor</goal>
	    </goals>
	    <phase>process-classes</phase>
	  </execution>
          <execution>
            <id>generated-helpmojo</id>
            <goals>
              <goal>helpmojo</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
	<version>3.8.0</version>
	<configuration>
 	  <compilerArgs>
	    <arg>-g</arg>
  	    <arg>-Xlint:unchecked</arg>
	  </compilerArgs>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <!-- maybe three jars even: one each for 
	   - maven plugin 
	   - ant task
	   - standalone application 
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
        <!--version>3.0.2</version-->
	<executions>
	  <execution>
            <id>second-jar</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classifier>antTask</classifier>
              <includes>
		<include>**/antTask/*</include><!-- this is added to the name
		of the jar file-->
		<include>**/core/*</include>
		<include>org/apache/maven/plugin/*Exception*</include>
		<include>org/apache/commons/io/*</include>
		<include>org/apache/commons/io/output/*</include>
		<include>org/apache/commons/io/filefilter/*</include>
		<include>org/codehaus/plexus/util/*</include>
 		<include>org/codehaus/plexus/util/cli/*</include>
 		<include>org/codehaus/plexus/util/cli/shell/*</include>
 		<include>*.properties</include>
               </includes>
            </configuration>
	  </execution>
	</executions>
	<!-- refers to all jars -->
	<configuration>
          <archive>
          <!-- name of jar and list of folders if set true -->
<!-- index>true</index-->
            <manifest>
	      <!-- adds all 'Implementation-xxx' 
		   but "Implementation-Vendor-Id' -->
              <addDefaultImplementationEntries>true
	      </addDefaultImplementationEntries>
	      <!-- adds all 'Specification-xxx' 
		   but "Implementation-Vendor-Id' -->
              <addDefaultSpecificationEntries>true
	      </addDefaultSpecificationEntries>
	      <!-- make jar executable for standalone application -->
	      <!--addClasspath>true</addClasspath-->
              <!--classpathPrefix>lib/</classpathPrefix-->
	      <!--classpathLayoutType>repository</classpathLayoutType-->
              <!--customClasspathLayout>WEB-INF/lib/$${artifact.groupIdPath}/$${artifact.artifactId}-$${artifact.version}$${dashClassifier?}.$${artifact.extension}</customClasspathLayout-->

	      <!--mainClass>the main class</mainClass-->
            </manifest>
	    <!-- 'sealed' means all packages are complete in this jar-->
	<manifestEntries>
		<Sealed>true</Sealed>
		<url>${project.url}</url>
	</manifestEntries>
	<manifestSections>
		<manifestSection>
			<name>eu/simuline/m2latex/core/</name>
			<manifestEntries>
				<Implementation-Version>${project.version}</Implementation-Version>
				<url>${project.url}</url>
			</manifestEntries>
		</manifestSection>
	</manifestSections>
          </archive>
	</configuration>

      </plugin>

      <!-- javadoc plugin -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
	  <breakiterator>true</breakiterator>
	  <show>private</show>
	  <source>1.8</source>
	</configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M1</version><!-- not up to date: gtM5 -->
        <configuration>
          <trimStackTrace>false</trimStackTrace>
          <systemPropertyVariables>
            <!--testResourcesDir>${project.testResources}</testResourcesDir-->
            <testResourcesDir>src/test/resources/</testResourcesDir>
            <buildDirectory>${project.build.directory}</buildDirectory>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.7.1</version>
        <configuration>
          <locales>en</locales>
        </configuration>
      </plugin>

      <!-- create html and pdf and other formats from latex -->
      <plugin>
	<!-- Tricky place as this plugin depends on itself.
	     If not in the local repository, activate old 1.2 instead,
	     install,
	     reactivate proper plugin and re-install.	-->
	<!--groupId>de.akquinet.jbosscc.latex</groupId>
	<artifactId>maven-latex-plugin</artifactId>
	    <version>1.2</version--><!--uptodate?-->
	<groupId>eu.simuline.m2latex</groupId>
	<artifactId>latex-maven-plugin</artifactId>
	<version>1.5-SNAPSHOT</version><!--uptodate?-->
	
	<configuration>
          <settings>
            <!-- The latex source directory as a string 
		 relative to $baseDirectory, 
		 containing $texSrcProcDirectory. 
		 This directory determines also the subdirectory of 
		 $outputDirectory to lay down the generated artifacts. 
		 The default value is 'src/site/tex' on Unix systems. -->
            <texSrcDirectory>src/site/tex</texSrcDirectory>

	    <!-- The latex source processing directory as a string 
		 relative to $texSrcDirectory
		 containing all tex main documents 
		 and the graphic files to be processed 
		 and also to be cleaned. 
		 Whether this is done recursively in subfolders 
		 is specified by $readTexSrcProcDirRec. 
		 The default value is '.'. -->
            <texSrcProcDirectory>.</texSrcProcDirectory>

	    <!-- Whether the tex source directory $texSrcProcDirectory 
		 shall be read recursively, 
		 i.e. including the subdirectories recursively. 
		 This is set to 'false' only during information development. 
		 The default value is 'true'. -->
	    <readTexSrcProcDirRec>false</readTexSrcProcDirRec>

           <!-- The artifacts generated by $latex2pdfCommand 
		will be copied to this folder 
		relative to $targetSiteDirectory 
		 which is by default '$targetDirectory/site' on Unix systems. 
		The default value is '.'.  -->
            <outputDirectory>.</outputDirectory>

	    <!-- A comma separated list of targets 
		 to be stored in $targetSet. 
		 Allowed values are pdf, html, txt, odt and docx. 
		 The default value is 'pdf, html'. -->
	    <targets>pdf</targets><!-- , html -->

	    <!-- The pattern to be applied to the contents of tex-files 

NOT QUITE: to the beginning 
		 which identifies a latex main file. 
		 The default value is choosen to match quite exactly 
		 the latex main files. 
		 Here we assume that the latex main file should contain 
		 the declaration '\documentclass' 
		 or the old fashioned 'documentstyle' 
		 preceeded by a few constucts. 
		 Strictly speaking, this is not necessary. 
		 For a more thorough discussion,  
		 and for an alternative approach, consult the manual. 
		 
		 The default value is choosen to match quite exactly 
		 the latex main files, no more no less. 
		 Since the pattern is chosen 
		 according to documentation collected from the internet, 
		 one can never be sure whether the pattern is perfect. 

		 If the current default value is not appropriate, 
		 please overwrite it in the configuration 
		 and notify the developer of this plugin of the deficiency. -->
	    <patternLatexMainFile>
\A(\\RequirePackage\s*(\[(\s|\w|,)*\])?\s*\{\w+\}\s*(\[(\d|\.)+\])?|
\\PassOptionsToPackage\s*\{\w+\}\s*\{\w+\}|
%.*$|
\\input\{[^{}]*\}|
\s)*
\\(documentstyle|documentclass)
	    </patternLatexMainFile>

           <!-- Path to the TeX scripts or null. 
		In the latter case, the scripts must be on the system path. 
		Note that in the pom, <texPath /> 
		and even <texPath>    </texPath> represent the null-File. 
		The default value is null. -->
            <texPath/>

            <!-- Clean up the working directory in the end? 
		 May be used for debugging when setting false. 
		 The default value is 'true'. -->
            <cleanUp>false</cleanUp>

	    <!-- This pattern is applied to file names 
		 and matching shall accept all the files 
		 which were created from a latex main file 'xxx.tex'. 
		 It is neither applied to directories 
		 nor to 'xxx.tex' itself. 
		 It shall not comprise neither graphic files to be processed 
		 nor files created from those graphic files. 
		 
		 This pattern is applied 
		 in the course of processing graphic files 
		 to decide which graphic files should be processed 
		 (those rejected by this pattern) 
		 and to log warnings if there is a risk, 
		 that graphic files to be processed 
		 are skipped or that processing a latex main file overwrites 
		 the result of graphic preprocessing. 
		 
		 When clearing the tex source directory $texSrcProcDirectory, 
		 i.e. all generated files should be removed, 
		 first those created from latex main files. 
		 As an approximation, 
		 those are removed which match this pattern. 
		 
		 The sequence 'T$T' 
		 is replaced by the prefix 'xxx'. 
		 The sequence 'T$T' must always be replaced: 
		 The symbol '$' occurs as end-sign as ')$' 
		 or as literal symbol as '\$'. 
		 Thus 'T$T' is no regular occurrence 
		 and must always be replaced with 'xxx'. 
		 
		 Spaces and newlines are removed 
		 from that pattern before matching. 
		 
		 This pattern may never be ensured to be complete, 
		 because any package 
		 may create files with names matching its own patterns 
		 and so any new package may break completeness. 
		 
		 If the current default value is not appropriate, 
		 please overwrite it in the configuration 
		 and notify the developer of this plugin of the deficiency. 
		 The default value is given below. -->
	    <patternCreatedFromLatexMain>
^(
T$T(                        \.([^.]*|synctex\.gz|out\.ps)|
      (-|ch|se|su|ap|li)?\d+\.x?html?|
                        \d+x\.x?bb|
                       \d+x?\.png|
                        -\d+\.svg|
                         -.+\.(idx|ind|ilg))|
zzT$T\.e?ps|
(cmsy)\d+(-c)?-\d+c?\.png|
(pdf)?latex\d+\.fls)$
	    </patternCreatedFromLatexMain>

	    <!-- The fig2dev command for conversion of fig-files 
		 into various formats. 
		 Currently only pdf combined with pdf_t is supported. 
		 The default value is 'fig2dev'.  -->
	    <fig2devCommand>fig2dev</fig2devCommand>

	    <!-- The options for the command $fig2devCommand 
		 common to both output languages. 
		 For the options specific for the two output langugages 
		 'pdftex' and 'pdftex_t', 
		 see $fig2devPtxOptions and $fig2devPdfEpsOptions, 
		 respectively. 
		 The default value is the empty string. 
		 
		 o '-D +/-rangelist' 
		 Export layers selectively ('+') 
		 or exclude layers from export ('-'). 
		 E.g. -D +10,40,55:70,80  means  keep 
		 only layers 10, 40, 55 through 70, and 80.
		 o '-j' 
		 i18n (internationalization feature)
		 o '-m mag' 
		 Set the magnification at which the figure is rendered 
		 to 'mag'.
		 The default is '1.0'. 
		 This is not usable within latex; not even '1.0'. 
		 o '-s fsize' 
		 Set the default font size (in points) 
		 for text objects to 'fsize'.
		 Refers to the latex-fonts only. 
		 o '-b width' 
		 specify width of blank border around figure (1/72 inch). -->
 	    <fig2devGenOptions />

	    <!-- The options for the command $fig2devCommand 
		 specific for the output languages 'pdftex_t' 
		 and 'pstex_t' which are the same. 
		 Note that in addition to these options, 
		 the option '-L pdftex_t' specifies the language, 
		 $fig2devGenOptions specifies the options 
		 common for the two output langugages 
		 'pdftex' and 'pdftex_t' 
		 and '-p xxx' specifies the full path 
		 of the pdf/eps-file to be included without extension. 
		 
		 Possible options are the following: 
		 (These seem to work for tex only 
		 although according to documentation for all languages. )
 		 Possible values are 
		 
		 o options specified for $fig2devGenOptions 
		 o '-E num'  
		 set encoding for text translation 
		 (0 no translation, 1 ISO-8859-1, 2 ISO-8859-2)
		 o '-F'  
		 do not set font family/series/shape, 
                 so you can set it from latex. 
		 o '-v' 
		 Verbose mode.
  
		 The default value for this option is the empty string. -->
	    <fig2devPtxOptions />

	    <!-- The options for the command $fig2devCommand 
		 specific for the output language 'pdftex'. 
		 Note that in addition to these option1s, 
		 the option '-L pdftex' specifies the language and 
		 $fig2devGenOptions specifies the options 
		 common for the two output langugages 
		 'pdftex' and 'pdftex_t'. 
		 The default value for this option is the empty string. -->
	    <fig2devPdfEpsOptions />

	    <!-- The command for conversion of gnuplot-files 
		 into various formats. 
		 Currently only pdf (graphics) 
		 combined with pdf_t (latex-texts) is supported. 
		 The default value is 'gnuplot'. -->
	    <gnuplotCommand>gnuplot</gnuplotCommand>

	    <!-- The options specific for $gnuplotCommand s
		 output terminal 'cairolatex', 
		 used for mixed latex/pdf-creation. 
		 Note that the option 'pdf|eps' 
		 of the terminal 'cairolatex' is not available, 
		 because it is set internally. 
		 The default option string is empty. -->
	    <gnuplotOptions />

	    <!-- The command for conversion of gnuplot-files 
		 into metapost`s postscript. 
		 The default value is 'mpost'. -->
	    <metapostCommand>mpost</metapostCommand>

	    <!-- The options for the command $metapostCommand. 
		 Leading and trailing blanks are ignored. 
		 A sequence of at least one blank separate the proper options. 
		 The default value is 
		 '-interaction=nonstopmode -recorder -s prologues=2'. 
		 FIXME: does not work:'outputtemplate="%j_%c.mps"' -->
	    <metapostOptions>
	      -interaction=nonstopmode -recorder -s prologues=2 
	    </metapostOptions>

	    <!-- The command for conversion of svg-files 
		 into a mixed format. 
		 The default value is 'inkscape'. -->
	    <svg2devCommand>inkscape</svg2devCommand>

	    <!-- The options for the command $svg2devCommand 
		 for exporting svg-figures into latex compatible files. 
		 
		 The following options are mandatory: 
		 o '-D' or '- -export-area-drawing' 
		 Export the drawing (not the page)
		 o '- -export-latex' 
		 Export PDF/PS/EPS without text. 
		 Besides the PDF/PS/EPS, a LaTeX file is exported,
		 putting the text on top of the PDF/PS/EPS file. 
		 Include the result in LaTeX like: \input{latexfile.tex}. 
		 Note that the latter option is necessary, 
		 to create the expected files. 
		 It is also conceivable to export text as pdf/eps 
		 
		 The following options are prohibited, 
		 because they are automatically added by the software: 
		 '- -export-filename=FILENAME' 
		 The ending of the filename, which is either eps or pdf 
		 determines the file type. 
		 
		 The default value is the minimal value, 
		 '-D - -export-latex'. -->
	    <svg2devOptions>-D --export-latex</svg2devOptions>

	    <!-- The command to create bounding box information 
		 from jpg-files and from png-files. 
		 This is run twice: 
		 once with parameter '-m' 
		 to create '.bb'-files for driver 'dvipdfm' and 
		 once with parameter '-x' 
		 to create '.xbb'-files for driver 'dvipdfmx'. 
		 The default value is 'ebb'. -->
	    <ebbCommand>ebb</ebbCommand>

	    <!-- The options for the command $ebbCommand 
		 except '-m' and '-x' 
		 which are added automatically. 
		 The default value is '-v'. -->
	    <ebbOptions>-v</ebbOptions>

            <!-- The LaTeX command to create a pdf-file. 
		 Possible values are e.g. 
		 'pdflatex', 'lualatex' and 'xelatex'. 
		 The default value (for which this software is also tested) 
		 is 'pdflatex'. -->
            <latex2pdfCommand>pdflatex</latex2pdfCommand>

 <!-- occurs for xelatex but neither for pdflatex nor for lualatex: 
      LaTeX Font Warning: Font shape 'OMS/cmtt/m/n' undefined
      (Font)              using 'OMS/cmsy/m/n' instead
      (Font)              for symbol 'textbackslash' on input line 371. -->

             <!-- The options for the command $latex2pdfCommand. 
		  Leading and trailing blanks are ignored. 
		  A sequence of at least one blank 
		  separates the proper options. 
		  
		  The default value  comprises the following options: 
		  -interaction=nonstopmode 
		  prevents latex from stopping at the first error. 
		  -synctex=1
		  makes latex create a pdf file 
		  which synchronizes with an editor supporting synchtex. 
		  -src-specials 
		  includes source specials into the output. dvi only? 
		  -recorder
		  makes latex create an fls-file 
		  specifying all inputted files. 
		  -shell-escape enables \write18 
but this can also be done via 
-shell-restricted       enable restricted \write18 and 
-enable-write18 
		  which is needed for some reason for driver dvipdfmx 
		  which seems to be the sole one supporting 
		  pdf-pictures in dvi-mode and pdf-pictures in pdf-mode. 
		  In pdftex this must be specified explicitly as 
		  Driver dvipdfmx is always used by xetex. 
required: 

-interaction=STRING     set interaction mode (STRING=batchmode/nonstopmode/
                        scrollmode/errorstopmode)

-ipc                    send DVI output to a socket as well as the usual
                        output file

[-no]-shell-escape      disable/enable \write18{SHELL COMMAND}
-shell-restricted       enable restricted \write18


-translate-file=TCXNAME use the TCX file TCXNAME
-8bit                   make all characters printable by default


// maybe, this shall be mandatory 
-recorder               enable filename recorder


allowed: 
-file-line-error-style  
-record-package-usages 
-include-directory=dir
-enable-write18 
-enc                    enable encTeX extensions such as \mubyte
-etex                   enable e-TeX extensions
-halt-on-error          stop processing at the first error
-ipc-start              as -ipc, and also start the server at the other end
-mktex=FMT              disable/enable mktexFMT generation (FMT=tex/tfm/pk)
-mltex                  enable MLTeX extensions such as \charsubdef
[-no]-parse-first-line  disable/enable parsing of first line of input file
-src-specials           insert source specials into the DVI file
-src-specials=WHERE     insert source specials in certain places of
                        the DVI file. WHERE is a comma-separated value
                        list: cr display hbox math par parend vbox
-synctex=NUMBER         generate SyncTeX data for previewers if nonzero
-ini                    be pdfinitex, for dumping formats; 
                        this is implicitly true 
                        if the program name is 'pdfinitex'
not allowed: 
-draftmode              switch on draft mode (generates no output PDF)
-output-directory=dir   to specify the output dir 
-aux-directory=dir      to specify the output aux-dir 
-job-name=name          effectively changes the output file name 
-quiet                  makes the log quiet and 
                        so circumvents error and warning detection 
-no-file-line-error     disable/enable file:line:error style messages
-fmt=FMTNAME            use FMTNAME instead of program name or a %& line 
-output-format=FORMAT   use FORMAT for job output; FORMAT is `dvi' or `pdf'
                        pdf is the only allowed...
-progname=STRING        set program (and fmt) name to STRING
                        only names also without -progname are possible 
-help                   display this help and exit
-version                output version information and exit

-->
            <latex2pdfOptions>
	      -interaction=nonstopmode 
	      -synctex=1 
	      -src-specials 
	      -recorder 
	      -shell-escape 
	    </latex2pdfOptions>

	    <!-- The pattern is applied linewise to the log-file 
		 and matching indicates an error 
		 emitted by the command $latex2pdfCommand. 

		 The default value is choosen to match quite exactly 
		 the latex errors in the log file, no more no less. 
		 Since no official documentation was found, 
		 the default pattern may be incomplete. 
		 In fact it presupposes, that $latex2pdfOptions 
		 does not contain '-file-line-error-style'.   

		 If the current default value is not appropriate, 
		 please overwrite it in the configuration 
		 and notify the developer of this plugin of the deficiency. 
		 The default value is '(^! )' (note the space). -->
	    <patternErrLatex>(^! )</patternErrLatex>

	    <!-- The pattern is applied linewise to the log-file 
		 and matching indicates a warning 
		 emitted by the command $latex2pdfCommand, 
		 disragarding warnings on bad boxes 
		 provided $debugWarnings is set. 
		 
		 This pattern may never be ensured to be complete, 
		 because any package may indicate a warning 
		 with its own pattern any new package may break completeness. 
		 Nevertheless, the default value aims completeness 
		 while be restrictive enough 
		 not to indicate a warning where none was emitted. 

		 If the current default value is not appropriate, 
		 please overwrite it in the configuration 
		 and notify the developer of this plugin of the deficiency. 
		 The default value is given below. -->
	    <patternWarnLatex>
^(LaTeX Warning: |
LaTeX Font Warning: |
(Package|Class) .+ Warning: |
pdfTeX warning( \((\d|\w)+\))?: |
\* fontspec warning: |
Missing character: There is no .* in font .*!$|
A space is missing\. (No warning)\.)
	    </patternWarnLatex>

	    <!-- Whether debugging of 
		 overfull/underfull hboxes/vboxes is on: 
		 If so, a bad box occurs in the last LaTeX run, 
		 a warning is displayed. 
		 For details, set $cleanUp to false, 
		 rerun LaTeX and have a look at the log-file.
		 The default value is 'true'. -->
	    <debugBadBoxes>true</debugBadBoxes>

	    <!-- Whether debugging of warnings is on: 
		 If so, a warning in the last LaTeX run is displayed. 
		 Note that warnings on boxes 
		 is controlled separately via $debugBadBoxes. 
		 For details, set $cleanUp to false, 
		 rerun LaTeX and have a look at the log-file. 
		 The default value is 'true'. -->
	    <debugWarnings>true</debugWarnings>

	    <!-- Whether creation of pdf-files from latex-files 
		 goes via dvi-files. 
		 
		 If $pdfViaDvi is set 
		 and the latex processor needs repetitions, 
		 these are all done creating dvi 
		 and then pdf is created in a final step 
		 invoking the command $dvi2pdfCommand. 
		 If $pdfViaDvi is not set, 
		 latex is directly converted into pdf. 
		 
		 Currently, not only conversion of latex-files is affected, 
		 but also conversion of graphic files 
		 into graphic formats which allow inclusion in the tex-file. 
		 If it goes via latex, 
		 then the formats are more based on (encapsulated) postscript; 
		 else on pdf. 
		 
		 In the dvi-file for jpg, png and svg 
		 only some space is visible and only in the final step 
		 performed by $dvi2pdfCommand, 
		 the pictures are included using the bounding boxes 
		 given by the .bb or the .xbb-file. 
		 These are both created by $ebbCommand
		 
		 Of course, the target dvi is not affected: 
		 This uses always the dvi-format. 
		 What is also affected are the tasks 
		 creating html, odt or docs: 
		 Although these are based on htlatex which is always dvi-based, 
		 the preprocessing is done in dvi or in pdf. 
		 Also the task txt is affected. 
		 
		 Performance: 
		 false: 17.692s-18.892s
		 true:  22.449s-24.500s

		 The default value is 'false'. -->
	    <pdfViaDvi>false</pdfViaDvi>

	    <!-- The driver to convert dvi into pdf-files. 
		 Note that this must fit the options 
		 of the packages 'xcolor' and 'graphicx'. 
		 Sensible values are 
		 'dvipdf', 'dvipdfm', 'dvipdfmx', 
		 and 'dvipdft' 
		 (which is 'dvipdfm' with option '-t').  
		 The default value is 'dvipdfmx'. -->
	    <dvi2pdfCommand>dvipdfmx</dvi2pdfCommand>

	    <!-- The options for the command $dvi2pdfCommand. 
		 The default value is the empty string. -->
 	    <dvi2pdfOptions />

	    <!-- The pattern is applied linewise to the log-file 
		 and matching triggers rerunning $latex2pdfCommand 
		 if $maxNumReRunsLatex is not yet reached 
		 to ensure termination. 
		 
		 This pattern may never be ensured to be complete, 
		 because any package 
		 may indicate the need to rerun $latex2pdfCommand 
		 with its own pattern any new package may break completeness. 
		 Nevertheless, the default value aims completeness 
		 while be tight enough not to trigger a superfluous rerun. 
		 
		 If the current default value is not appropriate, 
		 please overwrite it in the configuration 
		 and notify the developer of this plugin of the deficiency. 
		 The default value is given below. 



-->
	    <patternReRunLatex>
^(LaTeX Warning: Label\(s\) may have changed\. Rerun to get cross-references right\.$|
Package \w+ Warning: .*Rerun( .*|\.)$|
Package \w+ Warning: .*$^\(\w+\) .*Rerun .*$|
LaTeX Warning: Etaremune labels have changed\.$|
\(rerunfilecheck\)                Rerun to get outlines right$)
	    </patternReRunLatex>

	    <!-- The maximal allowed number of reruns of $latex2pdfCommand. 
		 This is to avoid endless repetitions. 
		 The default value is 5. 
		 This shall be non-negative 
		 or -1 which signifies that there is no threshold. -->
	    <maxNumReRunsLatex>-1</maxNumReRunsLatex>


            <!-- The BibTeX command to create a bbl-file 
		 from an aux-file and a bib-file 
		 (using a bst-style file). 
		 The default value is 'bibtex'. -->
            <bibtexCommand>bibtex</bibtexCommand>

	    <!-- The options for the command $bibtexCommand. 
		 The default value is the empty string. -->
	    <bibtexOptions />

	    <!-- The pattern is applied linewise to the blg-file 
		 and matching indicates that $bibtexCommand failed. 
		 The default value is chosen 
		 according to the 'bibtex' documentation. -->
	    <patternErrBibtex>error message</patternErrBibtex>

	    <!-- The pattern is applied linewise to the blg-file 
		 and matching indicates a warning $bibtexCommand emitted. 
		 The default value is chosen 
		 according to the 'bibtex' documentation. -->
	    <patternWarnBibtex>^Warning--</patternWarnBibtex>

	    <!-- The MakeIndex command to create an ind-file 
		 from an idx-file logging on an ilg-file. 
		 The default value is 'makeindex'. -->
	    <makeIndexCommand>makeindex</makeIndexCommand>

	    <!-- The options for the command $makeIndexCommand. 
		 The default value is the empty string. -->
	    <makeIndexOptions>-c</makeIndexOptions>

	    <!-- The pattern is applied linewise to the ilg-file 
		 and matching indicates that $makeIndexCommand failed. 
		 The default value '(!! Input index error )' 
		 is chosen according to the 'makeindex' documentation. -->
	    <patternErrMakeIndex>
	    (!! Input index error )
	    </patternErrMakeIndex>

	    <!-- The pattern is applied linewise to the ilg-file 
		 and matching indicates a warning $makeIndexCommand emitted. 
		 The default value '(## Warning )' 
		 is chosen according to the 'makeindex' documentation. -->
	    <patternWarnMakeIndex>(## Warning )</patternWarnMakeIndex>

	    <!-- The pattern is applied linewise to the log-file 
		 and matching triggers rerunning $makeIndexCommand 
		 followed by $latex2pdfCommand. 

		 This pattern only matches a warning 
		 emitted by the package 'rerunfilecheck' 
		 e.g. used with option 'index'. 
		 The default value 
		 is chosen according to the package documentation. 

		 If the current default value is not appropriate, 
		 please overwrite it in the configuration 
		 and notify the developer of this plugin of the bug. -->
	    <patternReRunMakeIndex>
(^\(rerunfilecheck\) +Rerun LaTeX/makeindex to get index right\.$)
	    </patternReRunMakeIndex>

	    <!-- The SplitIndex command to create ind-files 
                 from an idx-file logging on ilg-files. 
                 This command invokes $makeIndexCommand. 
                 The default value is 'splitindex'. -->
	    <splitIndexCommand>splitindex</splitIndexCommand>

	    <!-- The options for $splitIndexCommand. 
                 Here, one has to distinguish between the options 
                 processed by $splitIndexCommand 
                 and those passed to $makeIndexCommand. 
                 The second category cannot be specified here, 
                 it is already given by $makeIndexOptions. 
                 In the first category is the option '-m' 
                 to specify the $makeIndexCommand. 
                 This is used automatically and cannot be specified here. 
                 Since $splitIndexCommand is used 
                 in conjunction with package 'splitidx', 
                 which hardcodes various parameters 
                 which are the default values for $splitIndexCommand 
                 and because the option may not alter certain interfaces, 
                 the only option which may be given explicitly 
                 is '-V', the short cut for '- -verbose'. 
                 Do not use '- -verbose' either for sake of portability. 
                 The default value is '-V'; it could also be empty. -->
	    <splitIndexOptions>-V</splitIndexOptions>

	    <!-- The MakeGlossaries command to create a gls-file 
		 from a glo-file (invoked without file ending) 
		 also taking ist-file or xdy-file 
		 into account logging on a glg-file. 
		 The default value is 'makeglossaries'. -->
	    <makeGlossariesCommand>makeglossaries</makeGlossariesCommand>

	    <!-- The options for the command $makeGlossariesCommand. 
		 These are the options for 'makeindex' 
		 (not for $makeIndexCommand) 
		 and for 'xindy' (also hardcoded). 
		 The aux-file decides on whether program is executed 
		 and consequently which options are used. 
		 
		 The default value is the empty option string. 
		 Nevertheless, 'xindy' is invoked as 
		 'xindy -L english  -I xindy -M ...'. 
		 With option '-L german', this is added. 
		 Options '-M<' for 'xindy' '-s' for 'makeindex' and '-t' and '-o' for both, 'xindy' and 'makeindex'. -->
	    <makeGlossariesOptions />

	    <!-- The pattern is applied linewise to the glg-file 
		 and matching indicates that $makeGlossariesCommand failed. 
		 The default value '(^\*\*\* unable to execute: )' 
		 is chosen according to the 'makeindex' documentation. 

		 If the current default value is not appropriate, 
		 please overwrite it in the configuration 
		 and notify the developer of this plugin of the bug. -->
	    <patternErrMakeGlossaries>
	      (^\*\*\* unable to execute: )
	    </patternErrMakeGlossaries>

	    <!-- The pattern in the glg-file 
		 indicating an error when running 'xindy' 
		 via $makeGlossariesCommand . 
		 The default value is '(^ERROR: )' 
		 (note the space and the brackets). 
		 If this is not appropriate, please modify 
		 and notify the developer of this plugin. -->
	    <!--patternErrXindy>(^ERROR: )</patternErrXindy-->
 
	    <!-- The pattern is applied linewise to the glg-file 
		 and matching indicates a warning when running 'xindy' 
		 via $makeGlossariesCommand. 
		 
		 The default value '(^WARNING: )' 
		 (note the space and the brackets) 
		 is chosen according to the 'xindy' documentation. 

		 If the current default value is not appropriate, 
		 please overwrite it in the configuration 
		 and notify the developer of this plugin of the deficiency. -->
	    <patternWarnXindy>(^WARNING: )</patternWarnXindy>

	    <!-- The pattern is applied linewise to the log-file 
		 and matching triggers rerunning $makeGlossariesCommand 
		 followed by $latex2pdfCommand. 

		 This pattern only matches a warning 
		 emitted by the package 'rerunfilecheck' 
		 e.g. used with option 'glossary'. 
		 The default value 
		 is chosen according to the package documentation. 

		 If the current default value is not appropriate, 
		 please overwrite it in the configuration 
		 and notify the developer of this plugin of the bug. -->
	    <patternReRunMakeGlossaries>
(^\(rerunfilecheck\) +Rerun LaTeX/makeindex to get glossary right\.$)
	    </patternReRunMakeGlossaries>
 
            <!-- The tex4ht command. 
		 Possible values are e.g. 'htlatex' and 'htxelatex'. 
		 The default value (for which this software is also tested) 
		 is 'htlatex'. -->
            <tex4htCommand>htlatex</tex4htCommand>

	    <!-- The options for the 'tex4ht'-style 
		 which creates a dvi-file or a pdf-file 
		 with information to create sgml, 
		 e.g. html or odt or something like that. 
		 The default value is 'html,2'. 

		 Format: 
		 <Output format>, <index>, <depth>, 
		 ['info'], ['next'], ['fn-in'], ['frames'], 
		 ['pmathml'], ['pmathml-css'], ...
		 
		 options in [] are optional 
		 DEFAULT: html,2 
		 Available formats are html, xhtml, mathml, ooffice 
		 index=2  index in 2 columns. 
		 depth is the depth of sectioning 
		 to which separate files are created. 
		 fn-in specifies inline footnotes 
		 frames specifies separate frames for contents and toc 
		 mathml specifies mathml 
		 uni-html4 is used for unicode
	    -->
	    <!-- xhtml,uni-html4,0 mathml,
,uni-html4,2,svg-->
            <tex4htStyOptions>
	    xhtml,uni-html4,2,pic-tabular
	    </tex4htStyOptions>

	    <!-- options for tex4ht.c, default is empty -->
	    <!-- ' -cunihtf' forces unicode -->
            <tex4htOptions> -cunihtf -utf8</tex4htOptions>

	    <!-- The options for 't4ht' which converts idv-file and lg-file 
		 into css-files, tmp-file and, 
		 by need and if configured accordingly into png files. 
		 The value '-p' prevents creation of png-pictures.
		 The default value is the empty string. -->
            <t4htOptions>-cvalidate</t4htOptions>

	    <!-- The pattern is applied to file names 
		 and matching shall accept 
		 exactly the target files of goal 'html' 
		 for a given latex main file 'xxx.tex'. 
		 Matching triggers copying those files to $outputDirectory. 

		 The patterns for the other targets 
		 are hardcoded and take the form 
		 '^T$T\.yyy$', where 'yyy' 
		 may be an ending or an alternative of endings. 
		 This pattern is neither applied to directories 
		 nor to 'xxx.tex' itself. 
		 
		 For an explanation of the pattern 'T$T', 
		 see $patternCreatedFromLatexMain. 
		 Spaces and newlines are removed 
		 from that pattern before processing. 
		 
		 The pattern is designed to match quite exactly 
		 the files to be copied to $targetSiteDirectory, 
		 for the goal 'html', 
		 not much more and at any case not less. 
		 since $tex2htCommand is not well documented, 
		 and still subject to development, 
		 this pattern cannot be guaranteed to be final. 

		 If the current default value is not appropriate, 
		 please overwrite it in the configuration 
		 and notify the developer of this plugin of the bug. 
		 The default value is given below. -->
	    <patternT4htOutputFiles>
	      ^(T$T(((ch|se|su|ap|li)?\d+)?\.x?html?|
	            \.css|
		    \d+x\.x?bb|
		    \d+x\.png|
		    -\d+\.svg)|
	           (cmsy)\d+(-c)?-\d+c?\.png)$
	    </patternT4htOutputFiles>

            <!-- The latex2rtf command to create rtf from latex directly. 
		 The default value is 'latex2rtf'. -->
	    <latex2rtfCommand>latex2rtf</latex2rtfCommand>

            <!-- The options of the command $latex2rtfCommand. 
		 The default value is the empty string. -->
	    <latex2rtfOptions />

            <!-- The odt2doc command 
		 to create MS word-formats from otd-files. 
		 This command comes with package unoconv. 
		 The default value is 'odt2doc'. -->
	    <odt2docCommand>odt2doc</odt2docCommand>

 	    <!-- The options of the command $odt2docCommand. 
		 Above all specification of output format 
		 via the option '-f'. 
		 Invocation is 'odt2doc -f<format> <file>.odt'. 
		 All output formats are shown by 'odt2doc - -show' 
		 but the formats interesting in this context 
		 are doc, doc6, doc95, docbook, docx, docx7, ooxml, rtf. 
		 Interesting also the verbosity options 
		 '-v', '-vv', '-vvv' 
		 the timeout '-T=secs' and '- -preserve' 
		 to keep permissions and timestamp 
		 of the original document. 
		 The default value is '-fdocx'. -->
	    <odt2docOptions>-fdocx</odt2docOptions>

	    <!-- The pdf2txt-command for converting pdf-files 
		 into plain text files. 
	    	 The default value is 'pdftotext'.  -->
            <pdf2txtCommand>pdftotext</pdf2txtCommand>

	    <!-- The options of the command $pdf2txtCommand. 
		 The default value is the empty string. -->
            <pdf2txtOptions />

	    <!-- The chktex-command for checking latex main files. 
		 The default value is 'chktex'. -->
           <chkTexCommand>chktex</chkTexCommand>

	   <!-- The options of the command $chkTexCommand, 
		except '-o output-file' 
		specifying the output file which is added automatically. 
		
		Here is a list of options useful in this context. 
		The first group of these are muting options: 
		- '-w', '-e', '-m', 
		Make the message number passed as parameter 
		a warning/an error/a message and turns it on. 
		Messages are not counted. 
		- '-n'
		Turns the warning/error number passed as a parameter off. 
		- '-L'
		Turns off suppression of messages on a per line basis. 
		
		The next group of interesting options are for output control: 
		- '-q'
		Shuts up about copyright information.
		- '-o output-file'
		Specifies the output file. This is added automatically 
		and shall thus not be specified by the user. 
		- '-b[0|1]'
		If you use the -o switch, and the named outputfile exists,
		it will be renamed to 'filename.bak'.
		- '-f format'
		Specifies the format of the output 
		via a format similar to 'printf()'. 
		For details consult the manual. 
		- '-vd'
		Verbosity level followed by a number 'd' 
		specifying the format of the output. 
		The verbosity number is resolved as a pattern 
		as if given by the option '-f format'. 
		Thus the option '-v' is ignored 
		if the option '-f format' is specified. 
		
		The default value is '-q -b0' 
		avoiding verbose output and backing up the output log-file. -->
           <chkTexOptions>-q -b0 -v1 -g0 -l ${basedir}/src/site/tex/chktexrc</chkTexOptions>
  	  </settings>
	</configuration>

	<executions>
          <!-- execute latex goal automatically during the site phase -->
          <execution><!-- DEFAULT -->
	    <id>process latex sources</id>
            <phase>site</phase>
            <goals>
              <goal>cfg</goal>
              <!--goal>clr</goal-->
              <!--goal>grp</goal-->
              <!--goal>dvi</goal-->
              <!--goal>pdf</goal-->
              <!--goal>html</goal-->
              <!--goal>rtf</goal-->
              <!--goal>odt</goal-->
              <!--goal>docx</goal-->
              <!--goal>txt</goal-->
              <!--goal>chk</goal-->
  <!--
here is a bug affecting goal odt: 
/usr/local/texlive/2014/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-tex4ht.def
89c89
 \def\pgfsys@svg@newline{{?nl}} % replacement 
- - -
 \def\pgfsys@svg@newline{\Hnewline} % original 
-->
            </goals>
          </execution>
	  <!-- DEFAULT: disable initially if plugin not yet installed: 
	       Plugin de.akquinet.jbosscc.latex:latex-maven-plugin:1.3-SNAPSHOT 
	       or one of its dependencies could not be resolved: 
	       Could not find artifact 
	       de.akquinet.jbosscc.latex:latex-maven-plugin:jar:1.3-SNAPSHOT -->
          <execution>
	    <id>clear latex sources</id>
            <phase>clean</phase>
            <goals>
              <goal>clr</goal>
            </goals>
          </execution>
  	</executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-jxr-plugin</artifactId>
	<version>3.0.0</version>
      </plugin>


            <!-- offers also command line analysis:
      mvn versions:display-plugin-updates
      mvn versions:display-dependency-updates
      mvn versions:display-property-updates
      -->
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>versions-maven-plugin</artifactId>
	<!-- TBD: uniform version -->
	<version>2.7</version>
	<reportSets>
	  <reportSet>
	    <reports>
	      <report>dependency-updates-report</report>
	      <report>plugin-updates-report</report>
	      <report>property-updates-report</report>
	    </reports>
	  </reportSet>
	</reportSets>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.0.0-M1</version><!-- not up to date: gtM3 -->
        <reportSets />
      </plugin>
      <!--plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.7</version>
          </plugin-->

      <!-- changes plugin: src/changes/changes.xml -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>2.12.1</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>changes-report</report>
            </reports>
          </reportSet>
        </reportSets>
       </plugin>


      
    </plugins>
  </reporting>

</project>
