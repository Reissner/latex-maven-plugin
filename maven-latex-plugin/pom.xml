<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <groupId>de.akquinet.jbosscc.latex</groupId>
  <artifactId>latex-maven-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <version>1.3-SNAPSHOT</version>
  <name>Maven LaTeX Plugin</name>
  <url>http://akquinet.github.com/maven-latex-plugin/</url>

  <description>
    Automatically create pdf, doc, odt, txt or html documents 
    from LaTeX sources during the Maven site phase.
  </description>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  
  <scm>
    <connection>scm:git:git://github.com/akquinet/maven-latex-plugin.git</connection>
    <url>https://github.com/akquinet/maven-latex-plugin</url>
    <developerConnection>scm:git:git@github.com:akquinet/maven-latex-plugin.git</developerConnection>
    <tag>1.3</tag>
  </scm>

  <mailingLists>
    <mailingList>
      <name>maven-latex-plugin Users</name>
      <archive>http://groups.google.com/group/maven-latex-plugin-users</archive>
      <post>maven-latex-plugin-users@googlegroups.com</post>
      <subscribe>maven-latex-plugin-users+subscribe@googlegroups.com</subscribe>
      <unsubscribe>maven-latex-plugin-users+unsubscribe@googlegroups.com</unsubscribe>
    </mailingList>
  </mailingLists>

  <organization>
    <name>akquinet AG</name>
    <url>http://www.akquinet.de</url>
  </organization>

  <developers>
    <developer>
      <id>cerker</id>
      <name>Carsten Erker</name>
      <email>carsten.erker at akquinet dot de</email>
      <organization>akquinet tech@spree GmbH</organization>
      <organizationUrl>http://www.akquinet.de</organizationUrl>
    </developer>

    <developer>
      <id>hwilming</id>
      <name>Heinz Wilming</name>
      <email>heinz.wilming at akquinet dot de</email>
      <organization>akquinet tech@spree GmbH</organization>
      <organizationUrl>http://www.akquinet.de</organizationUrl>
    </developer>

    <developer>
      <id>ereissner</id>
      <name>Ernst Reissner</name>
      <email>rei3ner at arcor dot de</email>
    </developer>
  </developers>

  <issueManagement>
    <system>Github Issues</system>
    <url>https://github.com/akquinet/maven-latex-plugin/issues</url>
  </issueManagement>

  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>3.0</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-ant-tasks</artifactId>
      <version>2.1.3</version>
    </dependency>

    <!-- dependencies to annotations -->
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>3.5</version>
      <scope>provided</scope>
    </dependency>
 
    <!--dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.5</version>
        </dependency-->
    <!--dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.4</version>
        </dependency-->
    <!-- https://mvnrepository.com/artifact/org.codehaus.plexus/plexus-utils -->
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>1.5.7</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-site-plugin</artifactId>
      <version>3.5.1</version>
      <type>maven-plugin</type>
    </dependency>

    <dependency>
      <!-- not up to date -->
      <groupId>easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>1.2_Java1.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
	<version>3.6.0</version>
	<configuration>
 	  <compilerArgs>
	    <arg>-g</arg>
  	    <arg>-Xlint:unchecked</arg>
	  </compilerArgs>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>3.3</version><!-- does not work with 3.4! -->
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
	<executions>
	  <execution>
            <id>second-jar</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classifier>antTask</classifier>
              <includes>
		<include>**/antTask/*</include>
		<include>**/core/*</include>
		<include>org/apache/maven/plugin/*Exception*</include>
		<include>org/apache/commons/io/*</include>
		<include>org/apache/commons/io/output/*</include>
		<include>org/apache/commons/io/filefilter/*</include>
		<include>org/codehaus/plexus/util/*</include>
 		<include>org/codehaus/plexus/util/cli/*</include>
 		<include>org/codehaus/plexus/util/cli/shell/*</include>
               </includes>
            </configuration>
	  </execution>
	</executions>
      </plugin>

      <!-- javadoc plugin -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.3</version>
      </plugin>

      <!-- create html and pdf and other formats from latex -->
      <plugin>
	<groupId>de.akquinet.jbosscc.latex</groupId>
	<artifactId>latex-maven-plugin</artifactId>
	<version>1.3-SNAPSHOT</version><!--uptodate?-->
	<!--artifactId>maven-latex-plugin</artifactId>
	    <version>1.2</version--><!--uptodate?-->
	
	<configuration>
          <settings>
            <!-- The latex source directory as a string, 
		 containing all tex main documents (including subfolders) 
		 to be processed relative to $baseDirectory. 
		 The default value is 'src/site/tex' on Unix systems. -->
            <texSrcDirectory>src/site/tex</texSrcDirectory>

           <!-- The artifacts generated by $latex2pdfCommand 
		will be copied to this folder 
		relative to $targetSiteDirectory 
		 which is by default '$targetDirectory/site' on Unix systems. 
		The default value is '.'.  -->
            <outputDirectory>.</outputDirectory>

	    <!-- A comma separated list of targets 
		 to be stored in $targetSet. 
		 Allowed values are pdf, html, txt, odt and docx. 
		 The default value is 'pdf, html'. -->
	    <targets>pdf, html</targets>

	    <!-- The pattern which identifies a latex main file. 
		 The default value is choosen to match quite exactly 
		 the latex main files. 
		 Here we assume that the latex main file should contain 
		 the declaration '\documentclass' 
		 or the old fashioned 'documentstyle' 
		 preceeded by a few constucts. 
		 Strictly speaking, this is not necessary. 
		 For a more thorough discussion,  
		 and for an alternative approach, consult the manual. 
		 
		 Since the pattern is chosen 
		 according to documentation collected from the internet, 
		 one can never be sure whether the pattern is perfect. 
		 If the user finds that default value is not appropriate, 
		 (s)he is asked to contribute 
		 and to notify the developer of this plugin. -->
	    <patternLatexMainFile>
\A(\\RequirePackage\s*(\[(\s|\w|,)*\])?\s*\{\w+\}\s*(\[(\d|\.)+\])?|
\\PassOptionsToPackage\s*\{\w+\}\s*\{\w+\}|
%.*$|
\\input\{[^{}]*\}|
\s*)*
\\(documentstyle|documentclass)
	    </patternLatexMainFile>

           <!-- Path to the TeX scripts or null. 
		In the latter case, the scripts must be on the system path. 
		Note that in the pom, <texPath/> 
		and even <texPath>    </texPath> represent the null-File. 
		The default value is null. -->
            <texPath/> 

            <!-- Clean up the working directory in the end? 
		 May be used for debugging when setting false. 
		 The default value is 'true'. -->
            <cleanUp>false</cleanUp>

	    <!-- For goal 'clr', 
		 the tex source directory $texSrcDirectory is cleared, 
		 i.e. all generated files should be removed, 
		 e.g. those coming from graphic files. 
		 This pattern defines the files to be removed 
		 which were created from a latex main file 'xxx.tex'. 
		 It is neither applied to directories 
		 nor to 'xxx.tex' itself. 
		 
		 The sequence 'T$T' 
		 is replaced by the prefix 'xxx'. 
		 The sequence 'T$T' must always be replaced: 
		 The symbol '$' occurs as end-sign as ')$' 
		 or as literal symbol as '\$'. 
		 Thus 'T$T' is no regular occurrence 
		 and must always be replaced with 'xxx'. 
		 
		 Spaces and newlines are removed 
		 from that pattern before processing. 
		 
		 The default value '^T$T\.[^.]*' 
		 is appropriate for most parameters and packages. 
		 Package 'srcltx' 
		 requires in addition '^T$T\.synctex\.gz' 
		 and package 'tex4ht' is for all the rest. 
		 The pattern is designed 
		 to match quite exactly the created files, 
		 not much more and at any case not less. 
		 In particular it has to comprise the files matching pattern 
		 $patternT4htOutputFiles. 
		 Nevertheless, since any new package may break the pattern, 
		 and not every package is well documented, 
		 this pattern cannot be guaranteed to be final. 
		 If the user finds an extension, (s)he is asked to contribute 
		 and to notify the developer of this plugin. 
		 Then the default value will be extended.  -->
	    <patternClearFromLatexMain>
^(
T$T             (\.([^.]*|synctex\.gz|out\.ps)|
   (ch|se|su|ap|li)?\d+\.x?html?|
             \d+x\.x?bb|
             \d+x\.png|
             -\d+\.svg)|
zzT$T\.e?ps|
(cmsy)\d+(-c)?-\d+c?\.png|
(pdf)?latex\d+\.fls)$
	    </patternClearFromLatexMain>

	    <!-- The fig2dev command for conversion of fig-files 
		 into various formats. 
		 Currently only pdf combined with pdf_t is supported. 
		 The default value is 'fig2dev'.  -->
	    <fig2devCommand>fig2dev</fig2devCommand>

	    <!-- The options for the command $fig2devCommand 
		 common to both output languages. 
		 For the options specific for the two output langugages 
		 'pdftex' and 'pdftex_t', 
		 see $fig2devPtxOptions and $fig2devPdfOptions, 
		 respectively. 
		 The default value is the empty string. -->
 	    <fig2devGenOptions></fig2devGenOptions>

	    <!-- The options for the command $fig2devCommand 
		 specific for the output language 'pdftex_t'. 
		 Note that in addition to these options, 
		 the option '-L pdftex_t' specifies the language, 
		 $fig2devGenOptions specifies the options 
		 common for the two output langugages 
		 'pdftex' and 'pdftex_t' 
		 and '-p xxx.pdf' specifies the pdf-file to be included. 
		 The default value for this option is the empty string. -->
	    <fig2devPtxOptions></fig2devPtxOptions>

	    <!-- The options for the command $fig2devCommand 
		 specific for the output language 'pdftex'. 
		 Note that in addition to these option1s, 
		 the option '-L pdftex' specifies the language and 
		 $fig2devGenOptions specifies the options 
		 common for the two output langugages 
		 'pdftex' and 'pdftex_t'. 
		 The default value for this option is the empty string. -->
	    <fig2devPdfOptions></fig2devPdfOptions>

	    <!-- The command for conversion of gnuplot-files 
		 into various formats. 
		 Currently only pdf (graphics) 
		 combined with pdf_t (latex-texts) is supported. 
		 The default value is 'gnuplot'. -->
	    <gnuplotCommand>gnuplot</gnuplotCommand>

	    <!-- The options specific for $gnuplotCommand s
		 output terminal 'cairolatex', 
		 used for mixed latex/pdf-creation. 
		 Note that the option 'pdf|eps' 
		 of the terminal 'cairolatex' is not available, 
		 because it is set internally. 
		 The default option string is empty. -->
	    <gnuplotOptions></gnuplotOptions>

	    <!-- The command for conversion of gnuplot-files 
		 into metapost`s postscript. 
		 The default value is 'mpost'. -->
	    <metapostCommand>mpost</metapostCommand>

	    <!-- The options for the command $metapostCommand. 
		 Leading and trailing blanks are ignored. 
		 A sequence of at least one blank separate the proper options. 
		 The default value is 
		 '-interaction=nonstopmode -recorder -s prologues=2'. -->
	    <metapostOptions>
	    -interaction=nonstopmode -recorder -s prologues=2
	    </metapostOptions>

  
            <!-- The LaTeX command to create a pdf-file. 
		 Possible values are e.g. 
		 'pdflatex', 'lualatex' and 'xelatex'. 
		 The default value (for which this software is also tested) 
		 is 'pdflatex'. -->
            <latex2pdfCommand>pdflatex</latex2pdfCommand>

 <!-- occurs for xelatex but neither for pdflatex nor for lualatex: 
      LaTeX Font Warning: Font shape 'OMS/cmtt/m/n' undefined
      (Font)              using 'OMS/cmsy/m/n' instead
      (Font)              for symbol 'textbackslash' on input line 371. -->

             <!-- The options for the command $latex2pdfCommand. 
		  Leading and trailing blanks are ignored. 
		  A sequence of at least one blank 
		  separates the proper options. 
		  The default value  comprises the following options: 
		  -interaction=nonstopmode 
		  prevents latex from stopping at the first error. 
		  -synctex=1
		  makes latex create a pdf file 
		  which synchronizes with an editor supporting synchtex. 
		  -src-specials 
		  includes source specials into the output. dvi only? 
		  -recorder
		  makes latex create an fls-file 
		  specifying all inputted files. 
		  -shell-escape enables \write18 
but this can also be done via 
-shell-restricted       enable restricted \write18 and 
-enable-write18 
		  which is needed for some reason for driver dvipdfmx 
		  which seems to be the sole one supporting 
		  pdf-pictures in dvi-mode and pdf-pictures in pdf-mode. 
		  In pdftex this must be specified explicitly as 
		  Driver dvipdfmx is always used by xetex. 
required: 

-interaction=STRING     set interaction mode (STRING=batchmode/nonstopmode/
                        scrollmode/errorstopmode)

-ipc                    send DVI output to a socket as well as the usual
                        output file

[-no]-shell-escape      disable/enable \write18{SHELL COMMAND}
-shell-restricted       enable restricted \write18


-translate-file=TCXNAME use the TCX file TCXNAME
-8bit                   make all characters printable by default


// maybe, this shall be mandatory 
-recorder               enable filename recorder


allowed: 
-file-line-error-style  
-record-package-usages 
-include-directory=dir
-enable-write18 
-enc                    enable encTeX extensions such as \mubyte
-etex                   enable e-TeX extensions
-halt-on-error          stop processing at the first error
-ipc-start              as -ipc, and also start the server at the other end
-mktex=FMT              disable/enable mktexFMT generation (FMT=tex/tfm/pk)
-mltex                  enable MLTeX extensions such as \charsubdef
[-no]-parse-first-line  disable/enable parsing of first line of input file
-src-specials           insert source specials into the DVI file
-src-specials=WHERE     insert source specials in certain places of
                        the DVI file. WHERE is a comma-separated value
                        list: cr display hbox math par parend vbox
-synctex=NUMBER         generate SyncTeX data for previewers if nonzero
-ini                    be pdfinitex, for dumping formats; 
                        this is implicitly true 
                        if the program name is 'pdfinitex'
not allowed: 
-draftmode              switch on draft mode (generates no output PDF)
-output-directory=dir   to specify the output dir 
-aux-directory=dir      to specify the output aux-dir 
-job-name=name          effectively changes the output file name 
-quiet                  makes the log quiet and 
                        so circumvents error and warning detection 
-no-file-line-error     disable/enable file:line:error style messages
-fmt=FMTNAME            use FMTNAME instead of program name or a %& line 
-output-format=FORMAT   use FORMAT for job output; FORMAT is `dvi' or `pdf'
                        pdf is the only allowed...
-progname=STRING        set program (and fmt) name to STRING
                        only names also without -progname are possible 
-help                   display this help and exit
-version                output version information and exit

-->
            <latex2pdfOptions>
	      -interaction=nonstopmode 
	      -synctex=1 
	      -src-specials 
	      -recorder 
	      -shell-escape 
	    </latex2pdfOptions>

	    <!-- The pattern in the log-file 
		 indicating an error when running $latex2pdfCommand. 
		 The default value is '(^! )' (note the space). 
		 If this is not appropriate, please modify 
		 and notify the developer of this plugin. -->
	    <patternErrLatex>(^! )</patternErrLatex>

	    <!-- The pattern in the log-file 
		 indicating that $latex2pdfCommand emitted a warning, 
		 disragarding warnings on bad boxes 
		 and taking $debugWarnings into account. 
		 It is designed to be as complete as possible 
		 while not indicating a warning where not appropriate. 
		 If the current default value is not appropriate, 
		 please overwrite and notify the developer of this plugin. 
		 The default value is given below. -->
	    <patternWarnLatex>
	      (^LaTeX Warning: |
	      ^LaTeX Font Warning: |
	      ^(Package|Class) .+ Warning: |
	      ^Missing character: There is no .* in font .*!$|
	      ^pdfTeX warning (ext4): destination with the same identifier|
	      ^* Font .+ does not contain script |
	      ^A space is missing\. (No warning)\.)
	    </patternWarnLatex>

	    <!-- Whether debugging of 
		 overfull/underfull hboxes/vboxes is on: 
		 If so, a bad box occurs in the last LaTeX run, 
		 a warning is displayed. 
		 For details, set $cleanUp to false, 
		 rerun LaTeX and have a look at the log-file.
		 The default value is 'true'. -->
	    <debugBadBoxes>true</debugBadBoxes>

	    <!-- Whether debugging of warnings is on: 
		 If so, a warning in the last LaTeX run is displayed. 
		 Note that warnings on boxes 
		 is controlled separately via $debugBadBoxes. 
		 For details, set $cleanUp to false, 
		 rerun LaTeX and have a look at the log-file. 
		 The default value is 'true'. -->
	    <debugWarnings>true</debugWarnings>

	    <!-- The pattern in the log-file 
		 which triggers rerunning $latex2pdfCommand 
		 taking $maxNumReRunsLatex into account. 
		 This pattern may never be ensured to be complete, 
		 because any new package may break completeness. 
		 Nevertheless, the default value aims completeness 
		 while be restrictive enough
		 not to trigger another latex run if not needed. 
		 Note that the log file may contain text from the tex file, 
		 e.g. if warning for an overfull hbox. 
		 Thus the pattern must be restrictive enough 
		 to avoid false rerun warning 
		 e.g. caused by occurrence of the word 'rerun'. 
		 
		 To ensure termination, let $maxNumRerunsLatex 
		 specify the maximum number of latex runs. 
		 If the user finds an extension, 
		 (s)he is asked to contribute 
		 and to notify the developer of this plugin. 
		 Then the default value will be extended. -->
	    <patternReRunLatex>
(^LaTeX Warning: Label\(s\) may have changed\. Rerun to get cross-references right\.$|
^Package \w+ Warning: .*Rerun .*$|
^Package \w+ Warning: .*$^\(\w+\) .*Rerun .*$|
^LaTeX Warning: Etaremune labels have changed\.$|
^\(rerunfilecheck\)                Rerun to get outlines right$)
	    </patternReRunLatex>

	    <!-- The maximal allowed number of reruns of $latex2pdfCommand. 
		 This is to avoid endless repetitions. 
		 The default value is 5. 
		 This shall be non-negative 
		 or -1 which signifies that there is no threshold. -->
	    <maxNumReRunsLatex>-1</maxNumReRunsLatex>


            <!-- The BibTeX command to create a bbl-file 
		 from an aux-file and a bib-file 
		 (using a bst-style file). 
		 The default value is 'bibtex'. -->
            <bibtexCommand>bibtex</bibtexCommand>

	    <!-- The options for the command $bibtexCommand. 
		 The default value is the empty string. -->
	    <bibtexOptions></bibtexOptions>

	    <!-- The Pattern in the blg-file 
		 indicating that $bibtexCommand failed. 
		 The default value is chosen 
		 according to the 'bibtex' documentation. -->
	    <patternErrBibtex>error message</patternErrBibtex>

	    <!-- The Pattern in the blg-file 
		 indicating a warning $bibtexCommand emitted. 
		 The default value is chosen 
		 according to the 'bibtex' documentation. -->
	    <patternWarnBibtex>Warning--</patternWarnBibtex>

	    <!-- The MakeIndex command to create an ind-file 
		 from an idx-file logging on an ilg-file. 
		 The default value is 'makeindex'. -->
	    <makeIndexCommand>makeindex</makeIndexCommand>

	    <!-- The options for the command $makeIndexCommand. 
		 The default value is the empty string. -->
	    <makeIndexOptions>-c</makeIndexOptions>

	    <!-- The pattern in the ilg-file 
		 indicating that $makeIndexCommand failed. 
		 The default value '(!! Input index error )' 
		 is chosen according to the 'makeindex' documentation. -->
	    <patternErrMakeIndex>
	    (!! Input index error )
	    </patternErrMakeIndex>

	    <!-- The Pattern in the ilg-file 
		 indicating a warning $makeIndexCommand emitted. 
		 The default value '(## Warning )' 
		 is chosen according to the 'makeindex' documentation. -->
	    <patternWarnMakeIndex>(## Warning )</patternWarnMakeIndex>

	    <!-- The pattern in the log-file which triggers 
		 rerunning $makeIndexCommand 
		 followed by $latex2pdfCommand. 
		 This pattern only occurs, if package 'rerunfilecheck' 
		 is used with option 'index'. 
		 The default value 
		 is chosen according to the package documentation. 
		 If the user finds that default value is not appropriate, 
		 (s)he is asked to contribute 
		 and to notify the developer of this plugin. -->
	    <patternReRunMakeIndex>
(^\(rerunfilecheck\) +Rerun LaTeX/makeindex to get index right\.$)
	    </patternReRunMakeIndex>

	    <!-- The MakeGlossaries command to create a gls-file 
		 from a glo-file (invoked without file ending) 
		 also taking ist-file or xdy-file 
		 into account logging on a glg-file. 
		 The default value is 'makeglossaries'. -->
	    <makeGlossariesCommand>makeglossaries</makeGlossariesCommand>

	    <!-- The options for the command $makeGlossariesCommand. 
		 These are the options for 'makeindex' 
		 (not for $makeIndexCommand) 
		 and for 'xindy' (also hardcoded). 
		 The aux-file decides on whether program is executed 
		 and consequently which options are used. 
		 
		 The default value is the empty option string. 
		 Nevertheless, 'xindy' is invoked as 
		 'xindy -L english  -I xindy -M ...'. 
		 With option '-L german', this is added. 
		 Options '-M<' for 'xindy' 
		 '-s' for 'makeindex' and 
		 '-t' and '-o' for both, 'xindy' and 'makeindex'. -->
	    <makeGlossariesOptions></makeGlossariesOptions>

	    <!-- The Pattern in the glg-file 
		 indicating that $makeGlossariesCommand failed. 
		 The default value is '(^\*\*\* unable to execute: )'. 
		 If this is not appropriate, please modify 
		 and notify the developer of this plugin. -->
	    <patternErrMakeGlossaries>
	      (^\*\*\* unable to execute: )
	    </patternErrMakeGlossaries>

	    <!-- The pattern in the glg-file 
		 indicating an error when running 'xindy' 
		 via $makeGlossariesCommand . 
		 The default value is '(^ERROR: )' 
		 (note the space and the brackets). 
		 If this is not appropriate, please modify 
		 and notify the developer of this plugin. -->
	    <!--patternErrXindy>(^ERROR: )</patternErrXindy-->
 
	    <!-- The pattern in the glg-file 
		 indicating a warning when running 'xindy' 
		 via $makeGlossariesCommand. 
		 The default value is '(^WARNING: )' 
		 (note the space and the brackets). 
		 If this is not appropriate, please modify 
		 and notify the developer of this plugin. -->
	    <patternWarnXindy>(^WARNING: )</patternWarnXindy>


	    <!-- The pattern in the log-file which triggers 
		 rerunning $makeGlossariesCommand 
		 followed by $latex2pdfCommand. 
		 This pattern only occurs, if package 'rerunfilecheck' 
		 is used with option 'glossary'. 
		 The default value 
		 is chosen according to the package documentation. 
		 If the user finds that default value is not appropriate, 
		 (s)he is asked to contribute 
		 and to notify the developer of this plugin. -->
	    <patternReRunMakeGlossaries>
(^\(rerunfilecheck\) +Rerun LaTeX/makeindex to get glossary right\.$)
	    </patternReRunMakeGlossaries>
 
            <!-- The tex4ht command. 
		 Possible values are e.g. 'htlatex' and 'htxelatex'. 
		 The default value (for which this software is also tested) 
		 is 'htlatex'. -->
            <tex4htCommand>htlatex</tex4htCommand>

	    <!-- The options for the 'tex4ht'-style 
		 which creates a dvi-file or a pdf-file 
		 with information to create sgml, 
		 e.g. html or odt or something like that. 
		 The default value is 'html,2'. 

		 Format: 
		 <Output format>, <index>, <depth>, 
		 ['info'], ['next'], ['fn-in'], ['frames'], 
		 ['pmathml'], ['pmathml-css'], ...
		 
		 options in [] are optional 
		 DEFAULT: html,2 
		 Available formats are html, xhtml, mathml, ooffice 
		 index=2  index in 2 columns. 
		 depth is the depth of sectioning 
		 to which separate files are created. 
		 fn-in specifies inline footnotes 
		 frames specifies separate frames for contents and toc 
		 mathml specifies mathml 
		 uni-html4 is used for unicode
	    -->
	    <!-- xhtml,uni-html4,0 mathml,
,uni-html4,2,svg-->
            <tex4htStyOptions>
	    xhtml,uni-html4,2,pic-tabular
	    </tex4htStyOptions>

	    <!-- options for tex4ht.c, default is empty -->
	    <!-- ' -cunihtf' forces unicode -->
            <tex4htOptions> -cunihtf -utf8</tex4htOptions>

	    <!-- The options for 't4ht' which converts idv-file and lg-file 
		 into css-files, tmp-file and, 
		 by need and if configured accordingly into png files. 
		 The value '-p' prevents creation of png-pictures.
		 The default value is the empty string. -->
            <t4htOptions>-cvalidate</t4htOptions>

	    <!-- The pattern for the target files of goal 'html' 
		 for a given latex main file 'xxx.tex'. 
		 The patterns for the other targets 
		 are hardcoded and take the form 
		 '^T$T\.yyy$', where 'yyy' 
		 may be an ending or an alternative of endings. 
		 
		 For an explanation of the pattern 'T$T', 
		 see $patternClearFromLatexMain. 
		 Spaces and newlines are removed 
		 from that pattern before processing. 
		 
		 The default value has the following components: 
		 - '^T$T\.x?html?$' is the main file. 
		 - '^T$Tli\d+\.x?html?$' are lists: 
		 toc, lof, lot, indices, glossaries, NOT the bibliography. 
		 - '^T$T(ch|se|su|ap)\d+\.x?html?$' 
		 are chapters, sections and subsections or below 
		 and appendices. 
		 - '^T$T\d+\.x?html?$' are footnotes. 
		 - '^T$T\.css$' are cascaded stylesheets. 
		 - '^T$T-\d+\.svg$' and '^T$T\d+x\.png$' 
		 are svg/png-files representing figures. 
		 - '^(cmsy)\d+(-c)?-\d+c?\.png$' represents special symbols. 
		 
		 Note that the patterns for the html-files 
		 can be summarized as '^T$T((ch|se|su|ap|li)?\d+)?\.x?html?$'. 
		 Adding the patterns for the css-file and the svg/png-files, 
		 we obtain 
		 '^T$T(((ch|se|su|ap|li)?\d+)?\.x?html?|
		 \.css|\d+x\.png|-\d+\.svg)$'. 
		 
		 The pattern is designed to match quite exactly 
		 the files to be copied to $targetSiteDirectory, 
		 for the goal 'html', 
		 not much more and at any case not less. 
		 since $tex2htCommand is not well documented, 
		 and still subject to development, 
		 this pattern cannot be guaranteed to be final. 
		 If the user finds an extension, (s)he is asked to contribute 
		 and to notify the developer of this plugin. 
		 Then the default value will be extended. -->
	    <patternT4htOutputFiles>
	      ^(T$T(((ch|se|su|ap|li)?\d+)?\.x?html?|
	      \.css|
              \d+x\.x?bb|
	      \d+x\.png|
	      -\d+\.svg)|
	      (cmsy)\d+(-c)?-\d+c?\.png)$
	    </patternT4htOutputFiles>

            <!-- The latex2rtf command to create rtf from latex directly. 
		 The default value is 'latex2rtf'. -->
	    <latex2rtfCommand>latex2rtf</latex2rtfCommand>

            <!-- The options of the command $latex2rtfCommand. 
		 The default value is the empty string. -->
	    <latex2rtfOptions></latex2rtfOptions>

            <!-- The odt2doc command 
		 to create MS word-formats from otd-files. 
		 The default value is 'odt2doc'. -->
	    <odt2docCommand>odt2doc</odt2docCommand>

 	    <!-- The options of the command $odt2docCommand. 
		 Above all specification of output format 
		 via the option '-f'. 
		 Invocation is 'odt2doc -f<format> <file>.odt'. 
		 All output formats are shown by 'odt2doc - -show' 
		 but the formats interesting in this context 
		 are doc, doc6, doc95, docbook, docx, docx7, ooxml, rtf. 
		 Interesting also the verbosity options 
		 '-v', '-vv', '-vvv' 
		 the timeout '-T=secs' and '- -preserve' 
		 to keep permissions and timestamp 
		 of the original document. 
		 The default value is '-fdocx'. -->
	    <odt2docOptions>-fdocx</odt2docOptions>

	    <!-- The pdf2txt command converting pdf into plain text. 
	    	 The default value is 'pdftotext'.  -->
            <pdf2txtCommand>pdftotext</pdf2txtCommand>

	    <!-- The options of the command $pdf2txtCommand. 
		 The default value is the empty string. -->
            <pdf2txtOptions></pdf2txtOptions>

  	  </settings>
	</configuration>

	<executions>
          <!-- execute latex goal automatically during the site phase -->
          <execution><!-- DEFAULT -->
	    <id>process latex sources</id>
            <phase>site</phase>
            <goals>
              <goal>cfg</goal>
              <!--goal>clr</goal-->
              <!--goal>grp</goal-->
              <!--goal>pdf</goal-->
              <!--goal>html</goal-->
              <!--goal>rtf</goal-->
              <!--goal>odt</goal-->
              <!--goal>docx</goal-->
              <!--goal>txt</goal-->
  <!--
here is a bug affecting goal odt: 
/usr/local/texlive/2014/texmf-dist/tex/generic/pgf/systemlayer/pgfsys-tex4ht.def
89c89
 \def\pgfsys@svg@newline{{?nl}} % replacement 
- - -
 \def\pgfsys@svg@newline{\Hnewline} % original 
-->
            </goals>
          </execution>
          <execution><!-- DEFAULT -->
	    <id>clear latex sources</id>
            <phase>clean</phase>
            <goals>
              <goal>clr</goal>
            </goals>
          </execution>
  	</executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.9</version>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.19.1</version>
        <reportSets />
      </plugin>
      <!--plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.7</version>
          </plugin-->
    </plugins>
  </reporting>

</project>
